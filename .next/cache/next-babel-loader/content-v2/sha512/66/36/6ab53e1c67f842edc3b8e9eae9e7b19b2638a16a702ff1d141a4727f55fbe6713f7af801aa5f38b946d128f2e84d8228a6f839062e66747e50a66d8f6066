{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nconst initialState = {\n  productos: [],\n  pedido: [],\n  aux: [],\n  total: [0]\n};\n\nconst reducerAdmin = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        productos: action.payload\n      });\n\n    case 'ADD_TO_CARRITO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // productos:state.productos.filter(m => {m.id !== action.payload.id}),\n        pedido: action.payload.cartItems // total:state.total.concat(action.payload.precio_venta)\n\n      });\n\n    case 'DELETE_TO_CARRITO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // total:state.total.filter(m=>m.id !== action.payload.id)\n        pedido: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //metodos\n\n\nconst existeItem = () => {\n  console.log('pedido');\n}; //acciones\n\n\nexport default createStore(reducerAdmin, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/home/victor/Documentos/tiendavirtualcarrito/components/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","initialState","productos","pedido","aux","total","reducerAdmin","state","action","type","payload","cartItems","existeItem","console","log"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AAEA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,YAAY,GAAC;AACfC,EAAAA,SAAS,EAAC,EADK;AAEfC,EAAAA,MAAM,EAAC,EAFQ;AAGfC,EAAAA,GAAG,EAAC,EAHW;AAIfC,EAAAA,KAAK,EAAC,CAAC,CAAD;AAJS,CAAnB;;AASA,MAAMC,YAAY,GAAE,CAACC,KAAK,GAACN,YAAP,EAAoBO,MAApB,KAA6B;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,6CACOF,KADP;AAEKL,QAAAA,SAAS,EAACM,MAAM,CAACE;AAFtB;;AAIL,SAAK,gBAAL;AACK,6CACOH,KADP;AAEI;AAEEJ,QAAAA,MAAM,EAACK,MAAM,CAACE,OAAP,CAAeC,SAJ5B,CAMI;;AANJ;;AAWJ,SAAK,mBAAL;AACK,6CACOJ,KADP;AAEU;AAELJ,QAAAA,MAAM,EAACK,MAAM,CAACE;AAJnB;;AAUL;AACI,aAAOH,KAAP;AA9BR;AAkCC,CAnCD,C,CAqCA;;;AACA,MAAMK,UAAU,GAAC,MAAI;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,CAFD,C,CAOA;;;AAKA,eAAejB,WAAW,CAACS,YAAD,EAAcP,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAAjC,CAA1B","sourcesContent":["import {createStore,applyMiddleware} from 'redux'\n\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\n\nconst initialState={\n    productos:[],\n    pedido:[],\n    aux:[],\n    total:[0]\n    \n}\n\n\nconst reducerAdmin =(state=initialState,action)=>{\nswitch(action.type){\n    case 'ADD_TODO':\n        return{\n            ...state,\n             productos:action.payload,\n        }\n   case 'ADD_TO_CARRITO':\n        return{\n            ...state,\n            // productos:state.productos.filter(m => {m.id !== action.payload.id}),\n              \n              pedido:action.payload.cartItems,\n\n            // total:state.total.concat(action.payload.precio_venta)\n\n\n        }\n\n    case 'DELETE_TO_CARRITO':\n         return{\n             ...state,\n                   // total:state.total.filter(m=>m.id !== action.payload.id)\n       \n              pedido:action.payload,\n                \n                   \n                }                                          \n            \n                            \n    default:\n        return state  \n    \n}\n\n}\n\n//metodos\nconst existeItem=()=>{\n    console.log('pedido')\n}\n\n\n\n\n//acciones\n\n\n\n\nexport default createStore(reducerAdmin,composeWithDevTools(applyMiddleware(thunk)))"]},"metadata":{},"sourceType":"module"}