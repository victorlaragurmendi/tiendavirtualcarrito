{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victor/Documentos/tiendavirtualcarrito/components/List.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport store from './store';\n\nconst List = ({\n  productos,\n  pedido,\n  agregarAlCarrito,\n  quitarDelAlCarrito\n}) => {\n  const {\n    0: datos,\n    1: SetDatos\n  } = useState([]);\n  useEffect(() => {\n    obtenerDatos();\n  }, []);\n\n  const obtenerDatos = async () => {\n    const data = await fetch('http://localhost:3001/productos');\n    const products = await data.json(); //  console.log(products)\n\n    SetDatos(products);\n    llenarDatos(products);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-group\",\n    children: productos.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item list-group-item-active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-white bg-dark mb-3\",\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: u.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: u.descripcion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [\"precio:    $\", u.precio_venta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            onClick: () => agregarAlCarrito(u, pedido),\n            children: \"Agregar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }, this)\n    }, u.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nconst llenarDatos = data => {\n  const action = {\n    type: 'ADD_TODO',\n    payload: data\n  };\n  store.dispatch(action); // console.log('haz algo ')\n};\n\nconst mapStateToProps = state => ({\n  productos: state.productos,\n  pedido: state.pedido\n});\n\nvar cant = 1;\n\nconst mapDispatchToProps = dispatch => ({\n  agregarAlCarrito(item, pedido) {\n    var encontro = pedido.find(algo => item.id == algo.id); // if(encontro){\n    //    cant=cant+1\n    //     console.log('el elemento ya fue ingresado con anterioridad');\n    //     const nuevoValor={...item,cantidad:cant}\n    //     // console.log(nuevoValor);\n    //     dispatch({\n    //         type:'UPDATE_CANTIDAD',\n    //         payload:nuevoValor\n    //          }) \n    //          console.log(cant)\n    // }else{\n    //    cant=1\n    //     const nuevoValor={...item,cantidad:1}\n    //     dispatch({\n    //         type:'ADD_TO_CARRITO',\n    //         payload:nuevoValor\n    //          }) \n    //     console.log('elemento agregado con exito');\n    //     console.log(cant);\n    // }\n\n    const cartItems = item.slice();\n  },\n\n  quitarDelAlCarrito(item) {\n    dispatch({\n      type: 'SAFA_DEL_CARRO',\n      payload: item\n    });\n  }\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/victor/Documentos/tiendavirtualcarrito/components/List.js"],"names":["React","useState","useEffect","connect","store","List","productos","pedido","agregarAlCarrito","quitarDelAlCarrito","datos","SetDatos","obtenerDatos","data","fetch","products","json","llenarDatos","map","u","width","nombre","descripcion","precio_venta","id","action","type","payload","dispatch","mapStateToProps","state","cant","mapDispatchToProps","item","encontro","find","algo","cartItems","slice"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport store from './store'\n\nconst List=({productos,pedido,agregarAlCarrito,quitarDelAlCarrito})=>{\n\n    const [datos,SetDatos]=useState([])\n\n    useEffect(()=>{\n      obtenerDatos()\n\n    },[])\n\n    \n    \n    const obtenerDatos=async()=>{\n      const data =await fetch('http://localhost:3001/productos')\n      const products=await data.json()\n    //  console.log(products)\n      SetDatos(products)\n      llenarDatos(products)\n       \n    }\n\n\n\n\n\n    return(\n        <div className=\"card-group\">\n            {\n                    productos.map(u=>(\n                        <li className=\"list-group-item list-group-item-active\" key={u.id}>\n                           \n                            <div className=\"card text-white bg-dark mb-3\" style={{width: '18rem'} } >\n                                <div className=\"card-body\">\n                                <h5 className=\"card-title\">{u.nombre}</h5>\n                                <p className=\"card-text\">{u.descripcion}</p>\n                                <p className=\"card-text\">precio:    ${u.precio_venta}</p>\n                                </div>\n                              \n                                <div className=\"card-body\">\n                                <button type=\"button\" className=\"btn btn-success\" onClick={()=>agregarAlCarrito(u,pedido)} >Agregar</button>\n                                </div>\n                            </div>\n\n                            \n\n                        </li>\n                    ))\n            }\n        </div>\n    )\n}\n\n\nconst llenarDatos=(data)=>{\n    const action={\n        type:'ADD_TODO',\n        payload:data\n    }\n    store.dispatch(action)\n    // console.log('haz algo ')\n}\n\n\nconst mapStateToProps = state=>({\n    productos:state.productos,\n    pedido:state.pedido\n\n})\nvar cant=1\nconst mapDispatchToProps =dispatch=>({\n    agregarAlCarrito(item,pedido){\n\n        var encontro=pedido.find(algo=>item.id==algo.id)\n        \n            // if(encontro){\n            //    cant=cant+1\n            //     console.log('el elemento ya fue ingresado con anterioridad');\n            //     const nuevoValor={...item,cantidad:cant}\n                \n            //     // console.log(nuevoValor);\n            //     dispatch({\n            //         type:'UPDATE_CANTIDAD',\n            //         payload:nuevoValor\n            //          }) \n            //          console.log(cant)\n            // }else{\n            //    cant=1\n            //     const nuevoValor={...item,cantidad:1}\n            //     dispatch({\n            //         type:'ADD_TO_CARRITO',\n            //         payload:nuevoValor\n            //          }) \n            //     console.log('elemento agregado con exito');\n            //     console.log(cant);\n            // }\n            const cartItems=item.slice();\n            \n    },\n    quitarDelAlCarrito(item){\n        dispatch({\n            type:'SAFA_DEL_CARRO',\n            payload:item\n        })\n    }\n \n\n})\n\nexport default  connect(mapStateToProps, mapDispatchToProps)( List);"]},"metadata":{},"sourceType":"module"}